{
        "scope": "source.m-at - comment - string, meta.keyword.code.focus meta.subroutine.fs - comment - string, source.focus meta.value - comment - string",
        "completions":
        [
                { "trigger": "@AfterRID", "contents": "@AfterRID(${1:Object.Record})" },
                { "trigger": "@AnyRecords", "contents": "@AnyRecords(${1:Object.Record})" },
                { "trigger": "@ApplyIndexPattern", "contents": "@ApplyIndexPattern()" },
                { "trigger": "@ApplyStyle", "contents": "@ApplyStyle()" },
                { "trigger": "@AssociateStructuredFlushWithTxn", "contents": "@AssociateStructuredFlushWithTxn(${1:Object})" },
                { "trigger": "@BeginTxn", "contents": "@BeginTxn()" },
                { "trigger": "@Break", "contents": "@Break(${1:Label})" },
                { "trigger": "@BreakReset", "contents": "@BreakReset()" },
                { "trigger": "@BuildGraph", "contents": "@BuildGraph()" },
                { "trigger": "@BuildGraphFile", "contents": "@BuildGraphFile()" },
                { "trigger": "@BuildGraphReport", "contents": "@BuildGraphReport()" },
                { "trigger": "@CallChildProcess", "contents": "@CallChildProcess()" },
                { "trigger": "@CallChildProcessSimple", "contents": "@CallChildProcessSimple()" },
                { "trigger": "@CallDataDefIcon", "contents": "@CallDataDefIcon()" },
                { "trigger": "@CallDataDefList", "contents": "@CallDataDefList()" },
                { "trigger": "@CallDataDefSub", "contents": "@CallDataDefSub()" },
                { "trigger": "@CallExternalSub", "contents": "@CallExternalSub(${1:Hha},${2:File},${3:Subroutine})" },
                { "trigger": "@CallIcon", "contents": "@CallIcon(${1:Icon})" },
                { "trigger": "@CallList", "contents": "@CallList(${1:List})" },
                { "trigger": "@CallProgram", "contents": "@CallProgram()" },
                { "trigger": "@CallScreenCancelLogic", "contents": "@CallScreenCancelLogic()" },
                { "trigger": "@CallScreenNewObjectLogic", "contents": "@CallScreenNewObjectLogic()" },
                { "trigger": "@CallScreenSaveLogic", "contents": "@CallScreenSaveLogic()" },
                { "trigger": "@CallSearch", "contents": "@CallSearch()" },
                { "trigger": "@CallSearchRecords", "contents": "@CallSearchRecords()" },
                { "trigger": "@CallStructuredCopyLocal", "contents": "@CallStructuredCopyLocal(${1:Object})" },
                { "trigger": "@CallStructuredCreate", "contents": "@CallStructuredCreate(${1:Object})" },
                { "trigger": "@CallStructuredExportTxn", "contents": "@CallStructuredExportTxn(${1:Object})" },
                { "trigger": "@CallStructuredFlush", "contents": "@CallStructuredFlush(${1:Object})" },
                { "trigger": "@CallStructuredImport", "contents": "@CallStructuredImport(${1:Object})" },
                { "trigger": "@CallStructuredImportAdditional", "contents": "@CallStructuredImportAdditional(${1:Object},${2:Import Name})" },
                { "trigger": "@CallStructuredPurge", "contents": "@CallStructuredPurge(${1:Object})" },
                { "trigger": "@CallStructuredSubmit", "contents": "@CallStructuredSubmit(${1:Object})" },
                { "trigger": "@CallSub", "contents": "@CallSub(${1:Sub})" },
                { "trigger": "@CallTool", "contents": "@CallTool()" },
                { "trigger": "@CallWinHelp", "contents": "@CallWinHelp()" },
                { "trigger": "@CaptureWindowBitmap", "contents": "@CaptureWindowBitmap()" },
                { "trigger": "@CaptureWindowMetafile", "contents": "@CaptureWindowMetafile()" },
                { "trigger": "@CDFunction", "contents": "@CDFunction()" },
                { "trigger": "@CheckCodeBaseForUpdate", "contents": "@CheckCodeBaseForUpdate()" },
                { "trigger": "@CheckRequired", "contents": "@CheckRequired()" },
                { "trigger": "@ChildProcess", "contents": "@ChildProcess()" },
                { "trigger": "@ChildProcessSimple", "contents": "@ChildProcessSimple()" },
                { "trigger": "@ClearInitialSort", "contents": "@ClearInitialSort()" },
                { "trigger": "@CallMastFunction", "contents": "@CallMastFunction(${1:Function})" },
                { "trigger": "@ClearObjectDirtyFlags", "contents": "@ClearObjectDirtyFlags(${1:Object})" },
                { "trigger": "@ClearObjectDirtyFlagsRT", "contents": "@ClearObjectDirtyFlagsRT()" },
                { "trigger": "@ClearUserInput", "contents": "@ClearUserInput()" },
                { "trigger": "@ClickCellName", "contents": "@ClickCellName()" },
                { "trigger": "@ClickCol", "contents": "@ClickCol()" },
                { "trigger": "@ClickHK", "contents": "@ClickHK()" },
                { "trigger": "@ClickParent", "contents": "@ClickParent()" },
                { "trigger": "@ClickParentName", "contents": "@ClickParentName()" },
                { "trigger": "@ClickRow", "contents": "@ClickRow()" },
                { "trigger": "@ClickUD", "contents": "@ClickUD()" },
                { "trigger": "@ClickValue", "contents": "@ClickValue()" },
                { "trigger": "@CloneObject", "contents": "@CloneObject(${1:Object})" },
                { "trigger": "@CloneRecords", "contents": "@CloneRecords(${1:Object.Record})" },
                { "trigger": "@CloseDirectoryForDirectories", "contents": "@CloseDirectoryForDirectories()" },
                { "trigger": "@CloseDirectoryForFiles", "contents": "@CloseDirectoryForFiles()" },
                { "trigger": "@CloseFileForReading", "contents": "@CloseFileForReading()" },
                { "trigger": "@CloseFileForWriting", "contents": "@CloseFileForWriting()" },
                { "trigger": "@CloseForRecordsSince", "contents": "@CloseForRecordsSince()" },
                { "trigger": "@CloseIndex", "contents": "@CloseIndex(${1:Object.Index})" },
                { "trigger": "@CloseIndexForIntersect", "contents": "@CloseIndexForIntersect(${1:Object.Index})" },
                { "trigger": "@CloseIndexForIntersectRT", "contents": "@CloseIndexForIntersectRT()" },
                { "trigger": "@CloseIndexRT", "contents": "@CloseIndexRT()" },
                { "trigger": "@CloseMastConnection", "contents": "@CloseMastConnection()" },
                { "trigger": "@CloseReportSession", "contents": "@CloseReportSession()" },
                { "trigger": "@CloseSet", "contents": "@CloseSet()" },
                { "trigger": "@HideWorkingIndicator", "contents": "@HideWorkingIndicator()" },
                { "trigger": "@CodeMemberNumber", "contents": "@CodeMemberNumber(${1:Subroutine})" },
                { "trigger": "@CommitTxn", "contents": "@CommitTxn()" },
                { "trigger": "@CommitTxnNotify", "contents": "@CommitTxnNotify()" },
                { "trigger": "@CompareObjectSnapshot", "contents": "@CompareObjectSnapshot(${1:Object})" },
                { "trigger": "@ConsoleProcess", "contents": "@ConsoleProcess()" },
                { "trigger": "@ConvertListToOID", "contents": "@ConvertListToOID()" },
                { "trigger": "@ConvertMTextToPlainText", "contents": "@ConvertMTextToPlainText()" },
                { "trigger": "@ConvertMTextToPlainTextWithoutTabs", "contents": "@ConvertMTextToPlainTextWithoutTabs()" },
                { "trigger": "@ConvertOIDToList", "contents": "@ConvertOIDToList()" },
                { "trigger": "@CopyFile", "contents": "@CopyFile()" },
                { "trigger": "@CopyFileClear", "contents": "@CopyFileClear()" },
                { "trigger": "@CopyFiles", "contents": "@CopyFiles()" },
                { "trigger": "@CopyRecordsRT", "contents": "@CopyRecordsRT()" },
                { "trigger": "@CreateDirectory", "contents": "@CreateDirectory()" },
                { "trigger": "@CreateFile", "contents": "@CreateFile()" },
                { "trigger": "@CreateObject", "contents": "@CreateObject(${1:Object})" },
                { "trigger": "@CreateObjectRT", "contents": "@CreateObjectRT()" },
                { "trigger": "@CreateRecord", "contents": "@CreateRecord(${1:Object.Record})" },
                { "trigger": "@CreateRecordAsIfImported", "contents": "@CreateRecordAsIfImported(${1:Object.Record})" },
                { "trigger": "@CreateRecordNoDuplicateCheck", "contents": "@CreateRecordNoDuplicateCheck(${1:Object.Record})" },
                { "trigger": "@CreateRecordRT", "contents": "@CreateRecordRT()" },
                { "trigger": "@CreateRIDList", "contents": "@CreateRIDList(${1:Object.Record})" },
                { "trigger": "@CreateSetRecord", "contents": "@CreateSetRecord()" },
                { "trigger": "@CreateTempFile", "contents": "@CreateTempFile()" },
                { "trigger": "@CreateTempFileClear", "contents": "@CreateTempFileClear()" },
                { "trigger": "@CSProxySendReceive", "contents": "@CSProxySendReceive()" },
                { "trigger": "@CSProxySetPort", "contents": "@CSProxySetPort()" },
                { "trigger": "@CurrentCell", "contents": "@CurrentCell()" },
                { "trigger": "@CurrentReportKeyPage", "contents": "@CurrentReportKeyPage()" },
                { "trigger": "@CurrentReportPage", "contents": "@CurrentReportPage()" },
                { "trigger": "@DataTypeWidthCalc", "contents": "@DataTypeWidthCalc()" },
                { "trigger": "@DeleteDirectory", "contents": "@DeleteDirectory()" },
                { "trigger": "@DeleteDirectoryCx", "contents": "@DeleteDirectoryCx()" },
                { "trigger": "@DeleteFile", "contents": "@DeleteFile()" },
                { "trigger": "@DeleteFileCx", "contents": "@DeleteFileCx()" },
                { "trigger": "@DeleteFileRT", "contents": "@DeleteFileRT()" },
                { "trigger": "@DeleteIndexEntries", "contents": "@DeleteIndexEntries(${1:Object.Index})" },
                { "trigger": "@DeleteIndexEntriesCx", "contents": "@DeleteIndexEntriesCx(${1:Object.Index})" },
                { "trigger": "@DeleteIndexEntriesRT", "contents": "@DeleteIndexEntriesRT()" },
                { "trigger": "@DeleteLogFile", "contents": "@DeleteLogFile()" },
                { "trigger": "@DeleteLogFileRT", "contents": "@DeleteLogFileRT()" },
                { "trigger": "@DeleteObjectRT", "contents": "@DeleteObjectRT()" },
                { "trigger": "@DeleteRecords", "contents": "@DeleteRecords(${1:Object.Record})" },
                { "trigger": "@DeleteRecordsRT", "contents": "@DeleteRecordsRT()" },
                { "trigger": "@DirtyData", "contents": "@DirtyData()" },
                { "trigger": "@DiscardTxn", "contents": "@DiscardTxn()" },
                { "trigger": "@DisplayHelp", "contents": "@DisplayHelp()" },
                { "trigger": "@DisplayIcon", "contents": "@DisplayIcon()" },
                { "trigger": "@DisplayNavBar", "contents": "@DisplayNavBar()" },
                { "trigger": "@EmbeddedSearchSelectedRIDs", "contents": "@EmbeddedSearchSelectedRIDs()" },
                { "trigger": "@EnumeratePrinters", "contents": "@EnumeratePrinters()" },
                { "trigger": "@ExitChildReturnData", "contents": "@ExitChildReturnData()" },
                { "trigger": "@ExitChildReturnSelectedData", "contents": "@ExitChildReturnSelectedData()" },
                { "trigger": "@ExitProcess", "contents": "@ExitProcess()" },
                { "trigger": "@ExportObject", "contents": "@ExportObject(${1:Object})" },
                { "trigger": "@ExportObjectCx", "contents": "@ExportObjectCx(${1:Object})" },
                { "trigger": "@ExportObjectRT", "contents": "@ExportObjectRT()" },
                { "trigger": "@ExtractEmbeddedRecords", "contents": "@ExtractEmbeddedRecords()" },
                { "trigger": "@ExtractEmbeddedRecordsRT", "contents": "@ExtractEmbeddedRecordsRT()" },
                { "trigger": "@Field", "contents": "@Field(${1:Object.Field})" },
                { "trigger": "@FieldList", "contents": "@FieldList()" },
                { "trigger": "@FieldRT", "contents": "@FieldRT()" },
                { "trigger": "@FileAttributes", "contents": "@FileAttributes()" },
                { "trigger": "@FileAttributesGMT", "contents": "@FileAttributesGMT()" },
                { "trigger": "@FileEnterEditor", "contents": "@FileEnterEditor()" },
                { "trigger": "@FileEnterViewer", "contents": "@FileEnterViewer()" },
                { "trigger": "@FileExitEditor", "contents": "@FileExitEditor()" },
                { "trigger": "@FileExitViewer", "contents": "@FileExitViewer()" },
                { "trigger": "@FileFullyInMemory", "contents": "@FileFullyInMemory(${1:Object.File})"},
                { "trigger": "@FilenameToInternal", "contents": "@FilenameToInternal()" },
                { "trigger": "@FindRID", "contents": "@FindRID(${1:Object.Record})" },
                { "trigger": "@FirstRID", "contents": "@FirstRID(${1:Object.Record})" },
                { "trigger": "@FlushDataDefSet", "contents": "@FlushDataDefSet()" },
                { "trigger": "@FlushIcon", "contents": "@FlushIcon()" },
                { "trigger": "@FlushObject", "contents": "@FlushObject(${1:Object})" },
                { "trigger": "@FlushObjectClass", "contents": "@FlushObjectClass(${1:Object})" },
                { "trigger": "@FlushObjectClassRT", "contents": "@FlushObjectClassRT()" },
                { "trigger": "@FlushObjectRT", "contents": "@FlushObjectRT()" },
                { "trigger": "@FlushObjects", "contents": "@FlushObjects(${1:Object})" },
                { "trigger": "@FlushObjectSnapshot", "contents": "@FlushObjectSnapshot(${1:Object})" },
                { "trigger": "@FlushRecords", "contents": "@FlushRecords(${1:Object.Record})" },
                { "trigger": "@FlushRecordsRT", "contents": "@FlushRecordsRT()" },
                { "trigger": "@FlushRIDList", "contents": "@FlushRIDList(${1:Object.Record})" },
                { "trigger": "@ForceError", "contents": "@ForceError()" },
                { "trigger": "@ForcePageBreak", "contents": "@ForcePageBreak()" },
                { "trigger": "@ForcePageRedraw", "contents": "@ForcePageRedraw()" },
                { "trigger": "@FormatDisplayText", "contents": "@FormatDisplayText()" },
                { "trigger": "@FormIndexRecords", "contents": "@FormIndexRecords(${1:Object.Index})" },
                { "trigger": "@FormIndexRecordsRT", "contents": "@FormIndexRecordsRT()" },
                { "trigger": "@GetAllTimeZones", "contents": "@GetAllTimeZones()" },
                { "trigger": "@GetBodyButtonState", "contents": "@GetBodyButtonState()" },
                { "trigger": "@GetBodyGroupState", "contents": "@GetBodyGroupState()" },
                { "trigger": "@GetCount", "contents": "@GetCount()" },
                { "trigger": "@GetCurrentBodyButtons", "contents": "@GetCurrentBodyButtons()" },
                { "trigger": "@GetCurrentComponent", "contents": "@GetCurrentComponent()" },
                { "trigger": "@GetCurrentDateTime", "contents": "@GetCurrentDateTime()" },
                { "trigger": "@GetCurrentDateTimeForZone", "contents": "@GetCurrentDateTimeForZone()" },
                { "trigger": "@GetCurrentElement", "contents": "@GetCurrentElement()" },
                { "trigger": "@GetCurrentFooter", "contents": "@GetCurrentFooter()" },
                { "trigger": "@GetCurrentOID", "contents": "@GetCurrentOID(${1:Object})" },
                { "trigger": "@GetCurrentPage", "contents": "@GetCurrentPage()" },
                { "trigger": "@GetCurrentRID", "contents": "@GetCurrentRID(${1:Object.Record})" },
                { "trigger": "@GetCurrentTimeZone", "contents": "@GetCurrentTimeZone()" },
                { "trigger": "@GetDateTimeFromLocal", "contents": "@GetDateTimeFromLocal()" },
                { "trigger": "@GetDestinationPage", "contents": "@GetDestinationPage()" },
                { "trigger": "@GetDomainUser", "contents": "@GetDomainUser()" },
                { "trigger": "@GetElementLabel", "contents": "@GetElementLabel(${1:Object.Field})" },
                { "trigger": "@GetElementLabelPointedTo", "contents": "@GetElementLabelPointedTo()" },
                { "trigger": "@GetField", "contents": "@GetField(${1:Object.Field})" },
                { "trigger": "@GetFieldExternal", "contents": "@GetFieldExternal(${1:Object.Field})" },
                { "trigger": "@GetFieldRT", "contents": "@GetFieldRT()" },
                { "trigger": "@GetFooterButtonState", "contents": "@GetFooterButtonState()" },
                { "trigger": "@GetFooterGroupState", "contents": "@GetFooterGroupState()" },
                { "trigger": "@GetGraphPixel", "contents": "@GetGraphPixel()" },
                { "trigger": "@GetInitialArgument", "contents": "@GetInitialArgument()" },
                { "trigger": "@GetKey", "contents": "@GetKey(${1:Object.Key})" },
                { "trigger": "@GetKeyExternal", "contents": "@GetKeyExternal(${1:Object.Key})" },
                { "trigger": "@GetKeyRT", "contents": "@GetKeyRT()" },
                { "trigger": "@GetLastRecordChosen", "contents": "@GetLastRecordChosen()" },
                { "trigger": "@GetLastTimeStamp", "contents": "@GetLastTimeStamp()" },
                { "trigger": "@GetLastTimeStampForFile", "contents": "@GetLastTimeStampForFile(${1:Object.File})" },
                { "trigger": "@GetLastTimeStampForObject", "contents": "@GetLastTimeStampForObject(${1:Object})" },
                { "trigger": "@GetLastTimeStampForObjects", "contents": "@GetLastTimeStampForObjects(${1:Object})" },
                { "trigger": "@GetLastTimeStampRT", "contents": "@GetLastTimeStampRT()" },
                { "trigger": "@GetLocal", "contents": "@GetLocal(${1:Local})" },
                { "trigger": "@GetLocalFromDateTime", "contents": "@GetLocalFromDateTime()" },
                { "trigger": "@GetLockPathFile", "contents": "@GetLockPathFile()" },
                { "trigger": "@GetLongLockInfoRT", "contents": "@GetLongLockInfoRT()" },
                { "trigger": "@GetMax", "contents": "@GetMax()" },
                { "trigger": "@GetMean", "contents": "@GetMean()" },
                { "trigger": "@GetMenuButtonState", "contents": "@GetMenuButtonState()" },
                { "trigger": "@GetMenuGroupState", "contents": "@GetMenuGroupState()" },
                { "trigger": "@GetMin", "contents": "@GetMin()" },
                { "trigger": "@GetNextDirectory", "contents": "@GetNextDirectory()" },
                { "trigger": "@GetNextFile", "contents": "@GetNextFile()" },
                { "trigger": "@GetNextLogEvents", "contents": "@GetNextLogEvents()" },
                { "trigger": "@GetNextLogEventsRT", "contents": "@GetNextLogEventsRT()" },
                { "trigger": "@GetObjectLongLockParmas", "contents": "@GetObjectLongLockParmas(${1:Object.Lock})" },
                { "trigger": "@GetObjectLongLockSystemInfo", "contents": "@GetObjectLongLockSystemInfo(${1:Object.Lock})" },
                { "trigger": "@GetObjectLongLockValue", "contents": "@GetObjectLongLockValue(${1:Object.Lock})" },
                { "trigger": "@GetOID", "contents": "@GetOID()" },
                { "trigger": "@GetParentProcessID", "contents": "@GetParentProcessID()" },
                { "trigger": "@GetPreviousPage", "contents": "@GetPreviousPage()" },
                { "trigger": "@GetPriorLogEvents", "contents": "@GetPriorLogEvents()" },
                { "trigger": "@GetPriorLogEventsRT", "contents": "@GetPriorLogEventsRT()" },
                { "trigger": "@GetProcessID", "contents": "@GetProcessID()" },
                { "trigger": "@GetProcessLongLockParams", "contents": "@GetProcessLongLockParams(${1:Object.Lock})" },
                { "trigger": "@GetProcessLongLockSystemInfo", "contents": "@GetProcessLongLockSystemInfo(${1:Object.Lock})" },
                { "trigger": "@GetProcessLongLockValue", "contents": "@GetProcessLongLockValue(${1:Object.Lock})" },
                { "trigger": "@GetQueuedProcessMessage", "contents": "@GetQueuedProcessMessage()" },
                { "trigger": "@GetRecord", "contents": "@GetRecord(${1:Object.Record})" },
                { "trigger": "@GetRecordAsOf", "contents": "@GetRecordAsOf(${1:Object.Record})" },
                { "trigger": "@GetRecordAsOfRT", "contents": "@GetRecordAsOfRT()" },
                { "trigger": "@GetRecordEffectiveOn", "contents": "@GetRecordEffectiveOn(${1:Object.Record})" },
                { "trigger": "@GetRecordEffectiveOnRT", "contents": "@GetRecordEffectiveOnRT()" },
                { "trigger": "@GetReportParam", "contents": "@GetReportParam()" },
                { "trigger": "@GetRoot", "contents": "@GetRoot()" },
                { "trigger": "@GetSearchSeed", "contents": "@GetSearchSeed()" },
                { "trigger": "@GetSelectedRIDs", "contents": "@GetSelectedRIDs()" },
                { "trigger": "@GetServerName", "contents": "@GetServerName()" },
                { "trigger": "@GetServerNameRT", "contents": "@GetServerNameRT()" },
                { "trigger": "@GetSortIndicator", "contents": "@GetSortIndicator()" },
                { "trigger": "@GetStateVariable", "contents": "@GetStateVariable(${1:StateVar})" },
                { "trigger": "@GetSum", "contents": "@GetSum()" },
                { "trigger": "@GetSystemVariable", "contents": "@GetSystemVariable(${1:SystemVar})" },
                { "trigger": "@GetTimeOffsetForGmt", "contents": "@GetTimeOffsetForGmt()" },
                { "trigger": "@GetTimeOffsetForLocal", "contents": "@GetTimeOffsetForLocal()" },
                { "trigger": "@GetTimeZoneDescription", "contents": "@GetTimeZoneDescription()" },
                { "trigger": "@GetTimeZoneDltLabel", "contents": "@GetTimeZoneDltLabel()" },
                { "trigger": "@GetTimeZoneDltOffset", "contents": "@GetTimeZoneDltOffset()" },
                { "trigger": "@GetTimeZoneName", "contents": "@GetTimeZoneName()" },
                { "trigger": "@GetTimeZoneStdLabel", "contents": "@GetTimeZoneStdLabel()" },
                { "trigger": "@GetTimeZoneStdOffset", "contents": "@GetTimeZoneStdOffset()" },
                { "trigger": "@GetTypeIndexPattern", "contents": "@GetTypeIndexPattern()" },
                { "trigger": "@GetTypeJustification", "contents": "@GetTypeJustification()" },
                { "trigger": "@GetUserInput", "contents": "@GetUserInput()" },
                { "trigger": "@GetWindowFontSizeUsed", "contents": "@GetWindowFontSizeUsed()" },
                { "trigger": "@GiveProcessFocus", "contents": "@GiveProcessFocus()" },
                { "trigger": "@GotoComponent", "contents": "@GotoComponent()" },
                { "trigger": "@GotoElement", "contents": "@GotoElement()" },
                { "trigger": "@GotoPage", "contents": "@GotoPage()" },
                { "trigger": "@Hang", "contents": "@Hang()" },
                { "trigger": "@ImportFile", "contents": "@ImportFile(${1:Object.File})" },
                { "trigger": "@ImportFileBatchesToStackWhile", "contents": "@ImportFileBatchesToStackWhile(${1:Subroutine})" },
                { "trigger": "@ImportFileBatchesToStackWhileRT", "contents": "@ImportFileBatchesToStackWhileRT()" },
                { "trigger": "@ImportFileBatchesWhile", "contents": "@ImportFileBatchesWhile(${1:Object.File},${2:Subroutine})" },
                { "trigger": "@ImportFileBatchesWhileRT", "contents": "@ImportFileBatchesWhileRT()" },
                { "trigger": "@ImportFileCx", "contents": "@ImportFileCx(${1:Object.File})" },
                { "trigger": "@ImportFileHxAsOf", "contents": "@ImportFileHxAsOf(${1:Object.File})" },
                { "trigger": "@ImportFileHxStore", "contents": "@ImportFileHxStore()" },
                { "trigger": "@ImportFileRT", "contents": "@ImportFileRT()" },
                { "trigger": "@ImportFileToOID", "contents": "@ImportFileToOID(${1:Object.File})" },
                { "trigger": "@ImportFileToOIDCx", "contents": "@ImportFileToOIDCx(${1:Object.File})" },
                { "trigger": "@ImportHxAsOfRT", "contents": "@ImportHxAsOfRT()" },
                { "trigger": "@ImportRecord", "contents": "@ImportRecord(${1:Object.Record})" },
                { "trigger": "@ImportRecordCx", "contents": "@ImportRecordCx(${1:Object.Record})" },
                { "trigger": "@ImportRecordEffectiveOn", "contents": "@ImportRecordEffectiveOn(${1:Object.Record})" },
                { "trigger": "@ImportRecordEffectiveOnCx", "contents": "@ImportRecordEffectiveOnCx(${1:Object.Record})" },
                { "trigger": "@ImportRecordEffectiveOnRT", "contents": "@ImportRecordEffectiveOnRT()" },
                { "trigger": "@ImportRecordHxAsOf", "contents": "@ImportRecordHxAsOf(${1:Object.Record})" },
                { "trigger": "@ImportRecordRT", "contents": "@ImportRecordRT()" },
                { "trigger": "@ImportRecords", "contents": "@ImportRecords(${1:Object.Record})" },
                { "trigger": "@ImportRecordsConditional", "contents": "@ImportRecordsConditional(${1:Object.Record},${2:Subroutine})" },
                { "trigger": "@ImportRecordsConditionalCx", "contents": "@ImportRecordsConditionalCx(${1:Object.Record},${2:Subroutine})" },
                { "trigger": "@ImportRecordsConditionalRT", "contents": "@ImportRecordsConditionalRT()" },
                { "trigger": "@ImportRecordsCx", "contents": "@ImportRecordsCx(${1:Object.Record})" },
                { "trigger": "@ImportRecordsHxAsOf", "contents": "@ImportRecordsHxAsOf(${1:Object.Record})" },
                { "trigger": "@ImportRecordsRT", "contents": "@ImportRecordsRT()" },
                { "trigger": "@ImportRecordsSince", "contents": "@ImportRecordsSince(${1:Object.Record})" },
                { "trigger": "@ImportRecordsSinceRT", "contents": "@ImportRecordsSinceRT()" },
                { "trigger": "@ImportRecordsToOID", "contents": "@ImportRecordsToOID(${1:Object.Record})" },
                { "trigger": "@ImportRecordsToOIDCx", "contents": "@ImportRecordsToOIDCx(${1:Object.Record})" },
                { "trigger": "@ImportRecordToOID", "contents": "@ImportRecordToOID(${1:Object.Record})" },
                { "trigger": "@ImportRecordToOIDCx", "contents": "@ImportRecordToOIDCx(${1:Object.Record})" },
                { "trigger": "@IndexKey", "contents": "@IndexKey(${1:Object.Index.Key})" },
                { "trigger": "@IndexKeyExternal", "contents": "@IndexKeyExternal(${1:Object.Index.Key})" },
                { "trigger": "@IndexKeyRT", "contents": "@IndexKeyRT()" },
                { "trigger": "@IndexLookup", "contents": "@IndexLookup(${1:Object.Index})" },
                { "trigger": "@IndexLookupIntoArray", "contents": "@IndexLookupIntoArray(${1:Object.Index})" },
                { "trigger": "@IndexLookupResults", "contents": "@IndexLookupResults(${1:Object.Index})" },
                { "trigger": "@IndexLookupRT", "contents": "@IndexLookupRT()" },
                { "trigger": "@IndexOID", "contents": "@IndexOID()" },
                { "trigger": "@IndexRecordPhysicalInfo", "contents": "@IndexRecordPhysicalInfo()" },
                { "trigger": "@InsertIndexEntries", "contents": "@InsertIndexEntries(${1:Object.Index})" },
                { "trigger": "@InsertIndexEntriesCx", "contents": "@InsertIndexEntriesCx(${1:Object.Index})" },
                { "trigger": "@InsertIndexEntriesRT", "contents": "@InsertIndexEntriesRT()" },
                { "trigger": "@Key", "contents": "@Key(${1:Object.Key})" },
                { "trigger": "@KeyList", "contents": "@KeyList()" },
                { "trigger": "@LastRID", "contents": "@LastRID(${1:Object.Record})" },
                { "trigger": "@LastServerKey", "contents": "@LastServerKey(${1:Object.Key})" },
                { "trigger": "@LastServerKeyRT", "contents": "@LastServerKeyRT()" },
                { "trigger": "@LaunchConsoleProcess", "contents": "@LaunchConsoleProcess()" },
                { "trigger": "@LaunchParentProcess", "contents": "@LaunchParentProcess()" },
                { "trigger": "@LaunchRemoteDebugger", "contents": "@LaunchRemoteDebugger()" },
                { "trigger": "@ListChangedRecords", "contents": "@ListChangedRecords(${1:Object})" },
                { "trigger": "@ListChangedRecordsRT", "contents": "@ListChangedRecordsRT()" },
                { "trigger": "@ListCurrentElementHxStoreValues", "contents": "@ListCurrentElementHxStoreValues()" },
                { "trigger": "@ListDataTypes", "contents": "@ListDataTypes()" },
                { "trigger": "@ListDirectories", "contents": "@ListDirectories()" },
                { "trigger": "@ListFiles", "contents": "@ListFiles()" },
                { "trigger": "@ListMemberNumber", "contents": "@ListMemberNumber(${1:List})" },
                { "trigger": "@ListOIDs", "contents": "@ListOIDs(${1:Object})" },
                { "trigger": "@ListOIDsRT", "contents": "@ListOIDsRT()" },
                { "trigger": "@ListProcesses", "contents": "@ListProcesses()" },
                { "trigger": "@ListRecordHxStoreEvents", "contents": "@ListRecordHxStoreEvents()" },
                { "trigger": "@ListRecordHxStoreRIDs", "contents": "@ListRecordHxStoreRIDs()" },
                { "trigger": "@ListRIDs", "contents": "@ListRIDs(${1:Object.Record})" },
                { "trigger": "@ListRIDsRT", "contents": "@ListRIDsRT()" },
                { "trigger": "@LoadExternalPageSet", "contents": "@LoadExternalPageSet()" },
                { "trigger": "@LockLongMulti", "contents": "@LockLongMulti()" },
                { "trigger": "@LockLongRT", "contents": "@LockLongRT()" },
                { "trigger": "@LockObjectLong", "contents": "@LockObjectLong(${1:Object.LongLock})" },
                { "trigger": "@LockObjectShort", "contents": "@LockObjectShort(${1:Object.ShortLock})" },
                { "trigger": "@LockObjectShortCx", "contents": "@LockObjectShortCx(${1:Object.Lock})" },
                { "trigger": "@LockProcessLong", "contents": "@LockProcessLong(${1:Object.ProcessLock})" },
                { "trigger": "@LockProcessShort", "contents": "@LockProcessShort(${1:Object.ProcessLock})" },
                { "trigger": "@LockProcessShortCx", "contents": "@LockProcessShortCx(${1:Object.ProcessLock})" },
                { "trigger": "@LockShortRT", "contents": "@LockShortRT()" },
                { "trigger": "@Log", "contents": "@Log()" },
                { "trigger": "@LogEventKey", "contents": "@LogEventKey()" },
                { "trigger": "@LogEventKeyExternal", "contents": "@LogEventKeyExternal()" },
                { "trigger": "@LongLockStillOwnedRT", "contents": "@LongLockStillOwnedRT()" },
                { "trigger": "@ManageIconsRT", "contents": "@ManageIconsRT()" },
                { "trigger": "@MarkFileForAbolishment", "contents": "@MarkFileForAbolishment()" },
                { "trigger": "@MaxClientKey", "contents": "@MaxClientKey(${1:Object.Key})" },
                { "trigger": "@MaxClientKeyRT", "contents": "@MaxClientKeyRT()" },
                { "trigger": "@Message", "contents": "@Message()" },
                { "trigger": "@MoreIndexEntries", "contents": "@MoreIndexEntries(${1:Object.Index})" },
                { "trigger": "@MoreRID", "contents": "@MoreRID(${1:Object.Record})" },
                { "trigger": "@MouseClickInProcess", "contents": "@MouseClickInProcess()" },
                { "trigger": "@MoveRecordAfter", "contents": "@MoveRecordAfter(${1:Object.Record})" },
                { "trigger": "@MoveRecordBefore", "contents": "@MoveRecordBefore(${1:Object.Record})" },
                { "trigger": "@NextIndexEntry", "contents": "@NextIndexEntry(${1:Object.Index})" },
                { "trigger": "@NextIndexEntryRT", "contents": "@NextIndexEntryRT()" },
                { "trigger": "@NextIntersectOID", "contents": "@NextIntersectOID(${1:Object.Index})" },
                { "trigger": "@NextIntersectOIDRT", "contents": "@NextIntersectOIDRT()" },
                { "trigger": "@NextRID", "contents": "@NextRID(${1:Object.Record})" },
                { "trigger": "@NextSetRecord", "contents": "@NextSetRecord()" },
                { "trigger": "@NextURN", "contents": "@NextURN(${1:Object.Key})" },
                { "trigger": "@ObjectChanged", "contents": "@ObjectChanged(${1:Object})" },
                { "trigger": "@ObjectLongLockStillOwned", "contents": "@ObjectLongLockStillOwned(${1:Object.Lock})" },
                { "trigger": "@ObjectSnapshotExists", "contents": "@ObjectSnapshotExists(${1:Object})" },
                { "trigger": "@ObjectSnapshotRT", "contents": "@ObjectSnapshotRT()" },
                { "trigger": "@ObjectUpdatedSinceImport", "contents": "@ObjectUpdatedSinceImport(${1:Object})" },
                { "trigger": "@OID", "contents": "@OID()" },
                { "trigger": "@OpenDirectoryForDirectories", "contents": "@OpenDirectoryForDirectories()" },
                { "trigger": "@OpenDirectoryForFiles", "contents": "@OpenDirectoryForFiles()" },
                { "trigger": "@OpenFileForReading", "contents": "@OpenFileForReading()" },
                { "trigger": "@OpenFileForWritingAppend", "contents": "@OpenFileForWritingAppend()" },
                { "trigger": "@OpenFileForWritingReplace", "contents": "@OpenFileForWritingReplace()" },
                { "trigger": "@OpenForRecordsSince", "contents": "@OpenForRecordsSince(${1:Object.Record})" },
                { "trigger": "@OpenIndex", "contents": "@OpenIndex(${1:Object.Index})" },
                { "trigger": "@OpenIndexForIntersect", "contents": "@OpenIndexForIntersect(${1:Object.Index})" },
                { "trigger": "@OpenIndexForIntersectRT", "contents": "@OpenIndexForIntersectRT()" },
                { "trigger": "@OpenIndexRT", "contents": "@OpenIndexRT()" },
                { "trigger": "@OpenMastConnection", "contents": "@OpenMastConnection()" },
                { "trigger": "@OpenReportSession", "contents": "@OpenReportSession()" },
                { "trigger": "@OpenSet", "contents": "@OpenSet()" },
                { "trigger": "@ShowWorkingIndicator", "contents": "@ShowWorkingIndicator()" },
                { "trigger": "@ParentProcess", "contents": "@ParentProcess()" },
                { "trigger": "@PhysicalFilePath", "contents": "@PhysicalFilePath()" },
                { "trigger": "@Ping", "contents": "@Ping()" },
                { "trigger": "@PrintArchDoc", "contents": "@PrintArchDoc()" },
                { "trigger": "@PrintHTMLDoc", "contents": "@PrintHTMLDoc()" },
                { "trigger": "@ProcessLongLockStillOwned", "contents": "@ProcessLongLockStillOwned(${1:Object.Lock})" },
                { "trigger": "@ProcessMessageKey", "contents": "@ProcessMessageKey()" },
                { "trigger": "@ProcessTimerKey", "contents": "@ProcessTimerKey()" },
                { "trigger": "@Program", "contents": "@Program()" },
                { "trigger": "@ProxyModeEnabled", "contents": "@ProxyModeEnabled()" },
                { "trigger": "@PurgeObject", "contents": "@PurgeObject(${1:Object})" },
                { "trigger": "@PurgeObjectCx", "contents": "@PurgeObjectCx(${1:Object})" },
                { "trigger": "@PurgeObjectRT", "contents": "@PurgeObjectRT()" },
                { "trigger": "@PutField", "contents": "@PutField(${1:Object.Field})" },
                { "trigger": "@PutFieldRT", "contents": "@PutFieldRT()" },
                { "trigger": "@PutLocal", "contents": "@PutLocal(${1:LocalVar})" },
                { "trigger": "@PutRecord", "contents": "@PutRecord(${1:Object.Record})" },
                { "trigger": "@PutRecordRT", "contents": "@PutRecordRT()" },
                { "trigger": "@PutRoot", "contents": "@PutRoot()" },
                { "trigger": "@PutStateVariable", "contents": "@PutStateVariable(${1:StateVar})" },
                { "trigger": "@PutSystemVariable", "contents": "@PutSystemVariable(${1:SystemVar})" },
                { "trigger": "@PutUserInput", "contents": "@PutUserInput()" },
                { "trigger": "@QueryDirectories", "contents": "@QueryDirectories()" },
                { "trigger": "@QueryFiles", "contents": "@QueryFiles()" },
                { "trigger": "@QueryProcess", "contents": "@QueryProcess()" },
                { "trigger": "@QueueProcessMessage", "contents": "@QueueProcessMessage()" },
                { "trigger": "@ReadKey", "contents": "@ReadKey()" },
                { "trigger": "@ReadKeyIPC", "contents": "@ReadKeyIPC()" },
                { "trigger": "@ReadProcessMessage", "contents": "@ReadProcessMessage()" },
                { "trigger": "@ReadRID", "contents": "@ReadRID(${1:Object.Record})" },
                { "trigger": "@RecordChanged", "contents": "@RecordChanged(${1:Object.Record})" },
                { "trigger": "@RecordCreated", "contents": "@RecordCreated(${1:Object.Record})" },
                { "trigger": "@RecordsChanged", "contents": "@RecordsChanged(${1:Object.Record})" },
                { "trigger": "@RecordsChangedRT", "contents": "@RecordsChangedRT()" },
                { "trigger": "@RecordsFullyInMemory", "contents": "@RecordsFullyInMemory(${1:Object.Record})"},
                { "trigger": "@RecordTag", "contents": "@RecordTag(${1:Object.Record})" },
                { "trigger": "@ReleaseForeignLongLockRT", "contents": "@ReleaseForeignLongLockRT()" },
                { "trigger": "@ReleaseForeignObjectLongLock", "contents": "@ReleaseForeignObjectLongLock(${1:Object.Lock})" },
                { "trigger": "@ReleaseForeignProcessLongLock", "contents": "@ReleaseForeignProcessLongLock(${1:Object.Lock})" },
                { "trigger": "@RenameDirectory", "contents": "@RenameDirectory()" },
                { "trigger": "@RenameFile", "contents": "@RenameFile()" },
                { "trigger": "@RenderWindowBitmap", "contents": "@RenderWindowBitmap()" },
                { "trigger": "@ReportBorderExists", "contents": "@ReportBorderExists()" },
                { "trigger": "@ReportTerminated", "contents": "@ReportTerminated()" },
                { "trigger": "@ResetEmbeddedSearch", "contents": "@ResetEmbeddedSearch()" },
                { "trigger": "@RestoreObjectSnapshot", "contents": "@RestoreObjectSnapshot(${1:Object})" },
                { "trigger": "@RetrieveField", "contents": "@RetrieveField(${1:Object.Field})" },
                { "trigger": "@RetrieveFieldExternal", "contents": "@RetrieveFieldExternal(${1:Object.Field})" },
                { "trigger": "@RetrieveFieldRT", "contents": "@RetrieveFieldRT()" },
                { "trigger": "@RetrieveRecord", "contents": "@RetrieveRecord(${1:Object.Record})" },
                { "trigger": "@RetrieveRecordCx", "contents": "@RetrieveRecordCx(${1:Object.Record})" },
                { "trigger": "@RID", "contents": "@RID()" },
                { "trigger": "@RollUpFile", "contents": "@RollUpFile(${1:Object.File})" },
                { "trigger": "@RollUpFileRT", "contents": "@RollUpFileRT()" },
                { "trigger": "@Root", "contents": "@Root()" },
                { "trigger": "@RootClient", "contents": "@RootClient()" },
                { "trigger": "@RootRT", "contents": "@RootRT()" },
                { "trigger": "@RootServer", "contents": "@RootServer()" },
                { "trigger": "@SaveObjectSnapshot", "contents": "@SaveObjectSnapshot(${1:Object})" },
                { "trigger": "@SaveProcessState", "contents": "@SaveProcessState()" },
                { "trigger": "@SearchLogEvents", "contents": "@SearchLogEvents()" },
                { "trigger": "@SearchLogEventsRT", "contents": "@SearchLogEventsRT()" },
                { "trigger": "@SelectCDRowSet", "contents": "@SelectCDRowSet()" },
                { "trigger": "@SelectCDRowSetRT", "contents": "@SelectCDRowSetRT()" },
                { "trigger": "@SelectCol", "contents": "@SelectCol()" },
                { "trigger": "@SelectColName", "contents": "@SelectColName()" },
                { "trigger": "@SelectHK", "contents": "@SelectHK()" },
                { "trigger": "@SelectRID", "contents": "@SelectRID()" },
                { "trigger": "@SelectRow", "contents": "@SelectRow()" },
                { "trigger": "@SelectUD", "contents": "@SelectUD()" },
                { "trigger": "@SendProcessMessage", "contents": "@SendProcessMessage()" },
                { "trigger": "@SendProcessPassword", "contents": "@SendProcessPassword()" },
                { "trigger": "@SetBodyButtonState", "contents": "@SetBodyButtonState()" },
                { "trigger": "@SetCurrentBodyButtons", "contents": "@SetCurrentBodyButtons()" },
                { "trigger": "@SetCurrentFooter", "contents": "@SetCurrentFooter()" },
                { "trigger": "@SetCurrentOID", "contents": "@SetCurrentOID(${1:Object})" },
                { "trigger": "@SetCurrentRID", "contents": "@SetCurrentRID(${1:Object.Record})" },
                { "trigger": "@SetCurrentTimeZone", "contents": "@SetCurrentTimeZone()" },
                { "trigger": "@SetDisplayIgnoreNavInputFlag", "contents": "@SetDisplayIgnoreNavInputFlag()" },
                { "trigger": "@SetErrorTrapFolder", "contents": "@SetErrorTrapFolder()" },
                { "trigger": "@SetFooterButtonState", "contents": "@SetFooterButtonState()" },
                { "trigger": "@SetGraphBkColor", "contents": "@SetGraphBkColor()" },
                { "trigger": "@SetGraphColor", "contents": "@SetGraphColor()" },
                { "trigger": "@SetGraphFont", "contents": "@SetGraphFont()" },
                { "trigger": "@SetImportFlag", "contents": "@SetImportFlag()" },
                { "trigger": "@SetMenuButtonState", "contents": "@SetMenuButtonState()" },
                { "trigger": "@SetMenuTopIcon", "contents": "@SetMenuTopIcon()" },
                { "trigger": "@SetNetworkZone", "contents": "@SetNetworkZone()" },
                { "trigger": "@SetPalette", "contents": "@SetPalette()" },
                { "trigger": "@SetReportParam", "contents": "@SetReportParam()" },
                { "trigger": "@SetSelectedRIDs", "contents": "@SetSelectedRIDs()" },
                { "trigger": "@SetSortIndicator", "contents": "@SetSortIndicator()" },
                { "trigger": "@SetTimer", "contents": "@SetTimer()" },
                { "trigger": "@SetTimeStampAppData", "contents": "@SetTimeStampAppData()" },
                { "trigger": "@SetTimeStampEnvData", "contents": "@SetTimeStampEnvData()" },
                { "trigger": "@ShowGraph", "contents": "@ShowGraph()" },
                { "trigger": "@ShredFile", "contents": "@ShredFile()" },
                { "trigger": "@SortRecords", "contents": "@SortRecords(${1:Object.Record},${2:Sort Value},${3:A})" },
                { "trigger": "@SortRecordsByColumn", "contents": "@SortRecordsByColumn()" },
                { "trigger": "@TextEditorMode", "contents": "@TextEditorMode()" },
                { "trigger": "@TextEditorModeRT", "contents": "@TextEditorModeRT()" },
                { "trigger": "@TextEnterEditor", "contents": "@TextEnterEditor()" },
                { "trigger": "@TextEnterViewer", "contents": "@TextEnterViewer()" },
                { "trigger": "@TextExitEditor", "contents": "@TextExitEditor()" },
                { "trigger": "@TextExitViewer", "contents": "@TextExitViewer()" },
                { "trigger": "@TextInsert", "contents": "@TextInsert()" },
                { "trigger": "@TextInsertTop", "contents": "@TextInsertTop()" },
                { "trigger": "@TextJoin", "contents": "@TextJoin()" },
                { "trigger": "@TimeStampAppData", "contents": "@TimeStampAppData()" },
                { "trigger": "@TimeStampDateTime", "contents": "@TimeStampDateTime()" },
                { "trigger": "@TimeStampDevice", "contents": "@TimeStampDevice()" },
                { "trigger": "@TimeStampDomainUser", "contents": "@TimeStampDomainUser()" },
                { "trigger": "@TimeStampEnvData", "contents": "@TimeStampEnvData()" },
                { "trigger": "@TimeStampRollUp", "contents": "@TimeStampRollUp()" },
                { "trigger": "@ToExternal", "contents": "@ToExternal(${1:DataType})" },
                { "trigger": "@ToExternalReport", "contents": "@ToExternalReport()" },
                { "trigger": "@ToInternal", "contents": "@ToInternal(${1:DataType})" },
                { "trigger": "@TreeRoot", "contents": "@TreeRoot()" },
                { "trigger": "@TriggerCx", "contents": "@TriggerCx()" },
                { "trigger": "@TriggerStructuredCx", "contents": "@TriggerStructuredCx()" },
                { "trigger": "@UnlockLongMulti", "contents": "@UnlockLongMulti()" },
                { "trigger": "@UnlockLongRT", "contents": "@UnlockLongRT()" },
                { "trigger": "@UnlockObjectLong", "contents": "@UnlockObjectLong(${1:Object.Lock})" },
                { "trigger": "@UnlockObjectShort", "contents": "@UnlockObjectShort(${1:Object.Lock})" },
                { "trigger": "@UnlockObjectShortCx", "contents": "@UnlockObjectShortCx(${1:Object.Lock})" },
                { "trigger": "@UnlockProcessLong", "contents": "@UnlockProcessLong(${1:Object.ProcessLock})" },
                { "trigger": "@UnlockProcessShort", "contents": "@UnlockProcessShort(${1:Object.ProcessLock})" },
                { "trigger": "@UnlockProcessShortCx", "contents": "@UnlockProcessShortCx(${1:Object.ProcessLock})" },
                { "trigger": "@UnlockShortRT", "contents": "@UnlockShortRT()" },
                { "trigger": "@UpdateCodeBase", "contents": "@UpdateCodeBase()" },
                { "trigger": "@UpdateIcon", "contents": "@UpdateIcon()" },
                { "trigger": "@UpdateIndexEntries", "contents": "@UpdateIndexEntries(${1:Object.Index})" },
                { "trigger": "@UpdateIndexEntriesCx", "contents": "@UpdateIndexEntriesCx(${1:Object.Index})" },
                { "trigger": "@UpdateIndexEntriesRT", "contents": "@UpdateIndexEntriesRT()" },
                { "trigger": "@UpdateLongLockRT", "contents": "@UpdateLongLockRT()" },
                { "trigger": "@UpdateObjectLongLock", "contents": "@UpdateObjectLongLock(${1:Object.Lock})" },
                { "trigger": "@UpdateProcessLongLock", "contents": "@UpdateProcessLongLock(${1:Object.Lock})" },
                { "trigger": "@UpdateWorkingIndicator", "contents": "@UpdateWorkingIndicator()" },
                { "trigger": "@Valid", "contents": "@Valid(${1:DataType})" },
                { "trigger": "@ValidElement", "contents": "@ValidElement(${1:Object.Element})" },
                { "trigger": "@ValidElementExtToInt", "contents": "@ValidElementExtToInt(${1:Object.Element})" },
                { "trigger": "@ValidExtToInt", "contents": "@ValidExtToInt(${1:DataType})" },
                { "trigger": "@WindowDrawn", "contents": "@WindowDrawn()" },
                { "trigger": "@WriteLogEvent", "contents": "@WriteLogEvent()" },
                { "trigger": "@WriteLogEventCx", "contents": "@WriteLogEventCx()" },
                { "trigger": "@WriteLogEventRT", "contents": "@WriteLogEventRT()" },
        ]
}