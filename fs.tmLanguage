<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>fs</string>
	</array>
	<key>name</key>
	<string>MagicFS</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^ *((:Code)(\.| +)([^\n\t]+?)) *$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.subroutine.header.fs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.fs</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.subroutine.fs</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Code Member Keyword</string>
			<key>end</key>
			<string>(;|(?=:Code))</string>
			<key>name</key>
			<string>meta.subroutine.fs</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#code-region</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#blank-line-error</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#errant-bracket</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^ *((:List) +([^\n\t]+?)) *$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.list.header.fs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.fs</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.list.fs</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>List Member Keyword</string>
			<key>end</key>
			<string>(?=^$|^\s*:)</string>
			<key>name</key>
			<string>meta.list.fs</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword-string-list</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^ *((:Icon) +([^\n\t]+?)) *$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.list.header.fs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.fs</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.list.fs</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Icon Member Keyword</string>
			<key>end</key>
			<string>(?=^$|^\s*:)</string>
			<key>name</key>
			<string>meta.icon.fs</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword-string-list</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.toolset.header.fs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.fs</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.toolset.fs</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Toolset Keyword</string>
			<key>match</key>
			<string>^ *((:Toolset) +([^\n()\t]+?)) *$</string>
			<key>name</key>
			<string>meta.toolset.fs</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#code-region</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>blank-line-error</key>
		<dict>
			<key>match</key>
			<string>^ *\n</string>
			<key>name</key>
			<string>invalid.illegal.blank-line.fs</string>
		</dict>
		<key>code-region</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#illegal-line-start</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#illegal-line-end</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-list</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.variable.other.local.fs constant.numeric</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>FS Local Variable</string>
					<key>match</key>
					<string>(?&lt;!@|\.)\b([A-Z])\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.variable.other.global.fs constant.numeric</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>FS Global Variable</string>
					<key>match</key>
					<string>(?&lt;!@|\.)\b([a-z])\b</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#control_flow</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#illegal-spaces</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.named-member.name.fs</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Magic Named Member Call</string>
					<key>match</key>
					<string>@@([A-Za-z0-9]+)</string>
					<key>name</key>
					<string>meta.named-member.fs entity.name.subroutine.fs</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.function.listset.number.upper.fs</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Magic Upper Listset Function</string>
					<key>match</key>
					<string>@[A-Z](\d+)\b</string>
					<key>name</key>
					<string>meta.function.listset.upper.fs support.function.fs</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.function.listset.number.lower.fs</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Magic Lower Listset Function</string>
					<key>match</key>
					<string>@[a-z](\d+)\b</string>
					<key>name</key>
					<string>meta.function.listset.lower.fs support.function.fs</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Magic Function</string>
					<key>match</key>
					<string>@[A-Z][A-Za-z]</string>
					<key>name</key>
					<string>meta.function.fs support.function.fs</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Tool call</string>
					<key>match</key>
					<string>@[a-wz][a-z]</string>
					<key>name</key>
					<string>meta.tool.fs entity.name.tool.fs</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>DLL call</string>
					<key>match</key>
					<string>@[a-z][A-Z]</string>
					<key>name</key>
					<string>meta.dll.fs constant.other.dll.fs</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Member call</string>
					<key>match</key>
					<string>@\d+</string>
					<key>name</key>
					<string>meta.member.fs entity.name.member.fs</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#illegal-block-start</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Comparison operators</string>
					<key>match</key>
					<string>@?~?(\!|\&amp;|\=|\&lt;|\&gt;)</string>
					<key>name</key>
					<string>keyword.operator.comparison.fs</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Arithmetic operators</string>
					<key>match</key>
					<string>@?~?(\+|\-|\/|\*|\\)</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.fs</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Other operators</string>
					<key>match</key>
					<string>@?~?(\#|\$|\%|\:|\||\?)</string>
					<key>name</key>
					<string>keyword.operator.other.fs</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Assignment operators</string>
					<key>match</key>
					<string>\^(?=[\{A-Za-z])</string>
					<key>name</key>
					<string>keyword.operator.assignment.fs</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Illegal assignment</string>
					<key>match</key>
					<string>\^(?=[^\{A-Za-z])</string>
					<key>name</key>
					<string>invalid.illegal.assignment.fs</string>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>begin</key>
			<string>(//)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.fs</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.fs</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.double-slash.header.fs</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;=//):Doc(\s+.*\n)</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Purpose</string>
					<key>match</key>
					<string>(?i:((side )?effects?|actions?|desc(r(iption)?)?|assumes?|pre(conditions?)?|s/e|bugs?|warning)):</string>
					<key>name</key>
					<string>comment.line.double-slash.header.fs</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Arguments</string>
					<key>match</key>
					<string>(?i:(in(put)?s?|arg(ument)?s?|val(ues)?)):</string>
					<key>name</key>
					<string>comment.line.double-slash.header.fs</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Variables</string>
					<key>match</key>
					<string>(?i:((local )?var(iable)?s?|locals?)):</string>
					<key>name</key>
					<string>comment.line.double-slash.header.fs</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Sets</string>
					<key>match</key>
					<string>(?i:((upper|lower)?(case)? ?(list)?sets?)):</string>
					<key>name</key>
					<string>comment.line.double-slash.header.fs</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Returns</string>
					<key>match</key>
					<string>(?i:(out(put)?s?|ret(urn)?s?)):</string>
					<key>name</key>
					<string>comment.line.double-slash.header.fs</string>
				</dict>
			</array>
		</dict>
		<key>conditional-line</key>
		<dict>
			<key>begin</key>
			<string>(?=[^\s/])</string>
			<key>comment</key>
			<string>A condition and action within a DO loop or IF statement</string>
			<key>end</key>
			<string>((;)|(?=}))</string>
			<key>endCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.separator.semicolon.fs</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.control.flow.check.fs</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Too many spaces in a conditional</string>
					<key>match</key>
					<string>(?&lt;=\S)\ {2,}(?=[^\s/])</string>
					<key>name</key>
					<string>invalid.illegal.spaces.fs</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>legal space</string>
					<key>match</key>
					<string>(?&lt;=\S)\ (?=[^\s/])</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#code-region</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#blank-line-error</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#errant-bracket</string>
				</dict>
			</array>
		</dict>
		<key>control_flow</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>@?IF({)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.if.begin.fs</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Conditional: IF{},@IF{}</string>
					<key>end</key>
					<string>}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.if.end.fs</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.control.flow.if.fs</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#illegal-line-start</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#conditional-line</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#blank-line-error</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>@?DO({)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.do.begin.fs</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>DO Loop: DO{},@DO{}</string>
					<key>end</key>
					<string>}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.do.end.fs</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.control.flow.do.fs</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#illegal-line-start</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#conditional-line</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#blank-line-error</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>@(\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.loop.begin.fs</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Apply-To-All: @[]</string>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.loop.end.fs</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.control.flow.loop.fs</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#code-region</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#blank-line-error</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#errant-bracket</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.pass-through.begin.fs</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Pass-through: []</string>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.pass-through.end.fs</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.control.flow.pass-through.fs</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#code-region</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#blank-line-error</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#errant-bracket</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>@?(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.concatenate.begin.fs</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Concatenation: (),@()</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.concatenate.end.fs</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.control.flow.concatenate.fs</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.definition.separator.comma.fs</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#code-region</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#blank-line-error</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#errant-bracket</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(@(\{)|(\{)(?=\})|(\{))</string>
					<key>beginCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.list.begin.fs</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.list.begin.fs meta.empty-list.fs</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.list.begin.fs</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Build List: {},@{}</string>
					<key>end</key>
					<string>(((?&lt;=[^@]\{)\})|\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.list.end.fs</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-list.fs</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.control.flow.list.fs</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.definition.separator.comma.fs</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#code-region</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#blank-line-error</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#errant-bracket</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>errant-bracket</key>
		<dict>
			<key>comment</key>
			<string>Extraneous brackets</string>
			<key>match</key>
			<string>[})\]].*$\n?</string>
			<key>name</key>
			<string>invalid.illegal.bracket.fs</string>
		</dict>
		<key>illegal-block-start</key>
		<dict>
			<key>comment</key>
			<string>Starting a new code block before the previous one is finished</string>
			<key>match</key>
			<string>:(Code|List)\s*.*</string>
			<key>name</key>
			<string>invalid.illegal.block-start.fs</string>
		</dict>
		<key>illegal-line-end</key>
		<dict>
			<key>match</key>
			<string>@\s*($|(?=//.*$))</string>
			<key>name</key>
			<string>invalid.illegal.line-end.fs</string>
		</dict>
		<key>illegal-line-start</key>
		<dict>
			<key>match</key>
			<string>^ *(:|#)(?!Code)</string>
			<key>name</key>
			<string>invalid.illegal.line-start.fs</string>
		</dict>
		<key>illegal-spaces</key>
		<dict>
			<key>comment</key>
			<string>Disallowed spacing</string>
			<key>match</key>
			<string>(?&lt;=\S)\ +(?!\s|//|$)</string>
			<key>name</key>
			<string>invalid.illegal.spaces.fs</string>
		</dict>
		<key>keyword-string-list</key>
		<dict>
			<key>begin</key>
			<string>(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.keyword-string-list.fs punctuation.definition.string-list.begin.fs</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>List of strings used in :List</string>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.keyword-string-list.fs punctuation.definition.string-list.end.fs</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.keyword-string-list.fs</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#keyword-string-list</string>
				</dict>
				<dict>
					<key>match</key>
					<string>|</string>
					<key>name</key>
					<string>keyword.operator.list-separator.fs punctuation.definition.separator.bar.fs</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#blank-line-error</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[^{}|]</string>
					<key>name</key>
					<string>string.unquoted.string-list.fs</string>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>begin</key>
			<string>(")</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.fs</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>double quoted string</string>
			<key>end</key>
			<string>((?&lt;=")(")|")|(\n)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.fs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.nil.fs</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unclosed-string.fs</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.single-line.fs</string>
		</dict>
		<key>string-list</key>
		<dict>
			<key>begin</key>
			<string>(`)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.string-list.fs punctuation.definition.string-list.begin.fs</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>String List</string>
			<key>end</key>
			<string>(')</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.string-list.fs punctuation.definition.string-list.end.fs</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.string-list.fs</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-list</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>keyword.operator.comma.fs punctuation.definition.separator.comma.fs</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[^,'`]</string>
					<key>name</key>
					<string>string.unquoted.string-list.fs</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.fs</string>
	<key>uuid</key>
	<string>01779121-0e59-4ec5-b2fa-dd10ca5ed9a1</string>
</dict>
</plist>
